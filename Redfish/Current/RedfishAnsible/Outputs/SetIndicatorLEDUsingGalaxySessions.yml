## This Ansible Playbook retrieves IndicatorLED values and changes their status using 
## the redfish_info and redfish_command Galaxy collections and their auth_token authentication
## method. 
##
## 1. Redfish_info has a GetChassisInventory command for the Chassis category (data type).
## Once you have retrieved the chassis inventory, you have to extract and save
## the resources (i.e. items) and properties (i.e. IndicatorLED) you need.
## This collection performs authentication with a [fake] OneView SSO token obtained in the first notebook.
## Then, it crawls the Redfish tree and manages errors for you. 
## 
## 2. Redfish_command has a specific command to modify the IndicatorLED chassis property
## in its Chassis category (aka data type). The list of all the commands for all Redfish data types
## is present in the CATEGORY_COMMANDS_ALL dictionnary of GitHub sources at: https://github.com/ansible-collections/community.general/blob/main/plugins/modules/remote_management/redfish/redfish_command.py

# Version 0.2
#

- hosts: RackMountBmcs
  connection: local
  gather_facts: False

  tasks:
# The following task is commented out because our iLO 5 simulator does not reply with a
# suitable response to the session creation request.

#      - name: "Create Session"
#        community.general.redfish_command:
#             category: Sessions
#             command: CreateSession
#             baseuri: "{{ inventory_hostname }}:{{ ansible_port }}"
#             username: "{{ username }}"
#             password: "{{ password }}"
#        register: SessionProperties


# The following task simulates an auth_token based authentication using 
# Ansible variable: {{ SessionProperties.session.token }}
      - name: "1.0- redfish_info: Retrieve Indicator LEDs status"
        community.general.redfish_info:
             category: Chassis
             command: GetChassisInventory
             baseuri: "{{ inventory_hostname }}:{{ ansible_port }}"
             auth_token: "SessionProperties.session.token"
        register: ChassisInventory
             
      - debug:
           msg: "{{ ChassisInventory.redfish_facts.chassis.entries | json_query('[].{Id: Id, ChassisType: ChassisType, IndicatorLED: IndicatorLED}') }}"
      
      
      - name: 1.1 Save indicator LEDs values
        set_fact:
            ChassisLEDValues: "{{ ChassisInventory.redfish_facts.chassis.entries | json_query('[].{Id: Id, IndicatorLED: IndicatorLED}') }}"
      
      - name: "2.0- redfish_command: SET chassis new indicator LED values"
        community.general.redfish_command:
            category: Chassis
            baseuri: "{{ inventory_hostname }}:{{ ansible_port }}"         
            command: "{{ 'IndicatorLedOn' if item.IndicatorLED == 'Off' else 'IndicatorLedOff' }}"
            resource_id: "{{ item.Id }}"
            auth_token: "SessionProperties.session.token"
        with_items: "{{ ChassisLEDValues }}"
           
       
      - name: 3.0- Get chassis inventory
        community.general.redfish_info:
             category: Chassis
             command: GetChassisInventory
             baseuri: "{{ inventory_hostname }}:{{ ansible_port }}"
             auth_token: "SessionProperties.session.token"
        register: ChassisInventory
             
      - debug:
           msg: "{{ ChassisInventory.redfish_facts.chassis.entries | json_query('[].{ChassisType: ChassisType, Id: Id, IndicatorLED: IndicatorLED}') }}"

# The following tasks is commented out because there is no real session
# opened in the iLO 5 simulator.

#      - name: Delete Session
#        community.general.redfish_command:
#             category: Sessions
#             command: DeleteSession
#             baseuri: "{{ inventory_hostname }}:{{ ansible_port }}"
#             auth_token: "SessionProperties.session.token"
#             session_uri: "{{ SessionProperties.session.uri }}"